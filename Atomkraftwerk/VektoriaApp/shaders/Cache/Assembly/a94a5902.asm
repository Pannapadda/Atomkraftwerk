//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mView;                  // Offset:    0 Size:    64
//   float4x4 g_mViewInv;               // Offset:   64 Size:    64 [unused]
//   float4x4 g_mProjection;            // Offset:  128 Size:    64 [unused]
//   float4x4 g_mProjectionInv;         // Offset:  192 Size:    64
//   float4x4 g_mProjectionInvViewport; // Offset:  256 Size:    64 [unused]
//   float4 g_f4AmbientColorUp;         // Offset:  320 Size:    16 [unused]
//   float4 g_f4AmbientColorDown;       // Offset:  336 Size:    16 [unused]
//   float3 g_f3CameraPos;              // Offset:  352 Size:    12 [unused]
//   float g_fAlphaTest;                // Offset:  364 Size:     4 [unused]
//   uint g_uNumLights;                 // Offset:  368 Size:     4
//   uint g_uNumSpotLights;             // Offset:  372 Size:     4
//   uint g_uWindowWidth;               // Offset:  376 Size:     4 [unused]
//   uint g_uWindowHeight;              // Offset:  380 Size:     4 [unused]
//   uint g_uMaxNumLightsPerTile;       // Offset:  384 Size:     4
//   uint g_uMaxNumElementsPerTile;     // Offset:  388 Size:     4
//   uint g_uNumTilesX;                 // Offset:  392 Size:     4
//   uint g_uNumTilesY;                 // Offset:  396 Size:     4
//   uint g_uMaxVPLs;                   // Offset:  400 Size:     4
//   uint g_uMaxNumVPLsPerTile;         // Offset:  404 Size:     4
//   uint g_uMaxNumVPLElementsPerTile;  // Offset:  408 Size:     4
//   float g_fVPLSpotStrength;          // Offset:  412 Size:     4 [unused]
//   float g_fVPLSpotRadius;            // Offset:  416 Size:     4 [unused]
//   float g_fVPLPointStrength;         // Offset:  420 Size:     4 [unused]
//   float g_fVPLPointRadius;           // Offset:  424 Size:     4 [unused]
//   float g_fVPLRemoveBackFaceContrib; // Offset:  428 Size:     4 [unused]
//   float g_fVPLColorThreshold;        // Offset:  432 Size:     4 [unused]
//   float g_fVPLBrightnessThreshold;   // Offset:  436 Size:     4 [unused]
//   float g_fPerFramePad1;             // Offset:  440 Size:     4 [unused]
//   float g_fPerFramePad2;             // Offset:  444 Size:     4 [unused]
//
// }
//
// cbuffer cbVPLConstants
// {
//
//   uint g_uNumVPLs;                   // Offset:    0 Size:     4
//   uint g_uVPLPad[3];                 // Offset:   16 Size:    36 [unused]
//
// }
//
// Resource bind info for g_VPLCenterAndRadiusBuffer
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_pointLightCenterAndRadiusBuffer    texture  float4         buf    0        1
// g_spotLightCenterAndRadiusBuffer    texture  float4         buf    1        1
// g_VPLCenterAndRadiusBuffer        texture  struct         r/o    2        1
// g_depthTexture                    texture   float       2dMS4    3        1
// g_perTilePointLightIndexBufferOut        UAV    uint         buf    0        1
// g_perTileSpotLightIndexBufferOut        UAV    uint         buf    1        1
// g_perTileVPLIndexBufferOut            UAV    uint         buf    2        1
// cbPerFrame                        cbuffer      NA          NA    2        1
// cbVPLConstants                    cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[26], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_structured t2, 16 
dcl_resource_texture2dms(4) (float,float,float,float) t3
dcl_uav_typed_buffer (uint,uint,uint,uint) u0
dcl_uav_typed_buffer (uint,uint,uint,uint) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadGroupID.xy
dcl_input vThreadIDInGroup.xy
dcl_input vThreadID.xy
dcl_temps 8
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 4
dcl_tgsm_raw g2, 4
dcl_tgsm_raw g3, 4
dcl_tgsm_structured g4, 4, 544
dcl_tgsm_raw g5, 4
dcl_tgsm_raw g6, 4
dcl_tgsm_structured g7, 4, 544
dcl_tgsm_raw g8, 4
dcl_tgsm_raw g9, 4
dcl_tgsm_structured g10, 4, 2048
dcl_thread_group 32, 32, 1
imad r0.x, vThreadIDInGroup.y, l(32), vThreadIDInGroup.x
if_z r0.x
  store_raw g1.x, l(0), l(340282346638528860000000000000000000000.000000)
  store_raw g0.x, l(0), l(0)
  store_raw g2.x, l(0), l(0)
  store_raw g3.x, l(0), l(272)
  store_raw g5.x, l(0), l(0)
  store_raw g6.x, l(0), l(272)
  store_raw g8.x, l(0), l(0)
  store_raw g9.x, l(0), l(1024)
endif 
ishl r0.y, vThreadGroupID.x, l(5)
iadd r0.z, r0.y, l(32)
iadd r0.w, vThreadGroupID.y, l(1)
ishl r1.xy, cb2[24].zwzz, l(5, 5, 0, 0)
utof r0.y, r0.y
utof r1.xz, r1.xxyx
div r0.y, r0.y, r1.x
mad r2.y, r0.y, l(2.000000), l(-1.000000)
imad r0.y, l(-32), vThreadGroupID.y, r1.y
utof r0.y, r0.y
div r0.y, r0.y, r1.z
mad r2.z, r0.y, l(2.000000), l(-1.000000)
mov r2.w, l(1.000000)
dp4 r3.z, r2.yzww, cb2[12].xyzw
dp4 r3.x, r2.yzww, cb2[13].xyzw
dp4 r3.y, r2.yzww, cb2[14].xyzw
dp4 r0.y, r2.yzww, cb2[15].xyzw
div r3.xyz, r3.xyzx, r0.yyyy
utof r0.y, r0.z
div r0.y, r0.y, r1.x
mad r2.x, r0.y, l(2.000000), l(-1.000000)
dp4 r4.y, r2.xzww, cb2[12].xyzw
dp4 r4.z, r2.xzww, cb2[13].xyzw
dp4 r4.x, r2.xzww, cb2[14].xyzw
dp4 r0.y, r2.xzww, cb2[15].xyzw
div r4.xyz, r4.xyzx, r0.yyyy
imad r0.y, l(-32), r0.w, r1.y
utof r0.y, r0.y
div r0.y, r0.y, r1.z
mad r1.y, r0.y, l(2.000000), l(-1.000000)
mov r1.xzw, r2.xxww
dp4 r5.y, r1.xyww, cb2[12].xyzw
dp4 r5.z, r1.xyww, cb2[13].xyzw
dp4 r5.x, r1.xyww, cb2[14].xyzw
dp4 r0.y, r1.xyzw, cb2[15].xyzw
div r0.yzw, r5.xxyz, r0.yyyy
mov r1.xzw, r2.yyww
dp4 r2.y, r1.xyww, cb2[12].xyzw
dp4 r2.z, r1.xyww, cb2[13].xyzw
dp4 r2.x, r1.xyww, cb2[14].xyzw
dp4 r1.x, r1.xyzw, cb2[15].xyzw
div r1.xyz, r2.xyzx, r1.xxxx
mul r2.xyz, r3.yzxy, r4.zxyz
mad r2.xyz, r3.xyzx, r4.xyzx, -r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r5.xyz, r0.wyzw, r4.xyzx
mad r4.xyz, r4.zxyz, r0.yzwy, -r5.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
mul r5.xyz, r0.yzwy, r1.zxyz
mad r0.yzw, r0.wwyz, r1.xxyz, -r5.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul r0.yzw, r0.yyzw, r1.wwww
mul r5.xyz, r3.xyzx, r1.xyzx
mad r1.xyz, r1.zxyz, r3.yzxy, -r5.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
sync_g_t
mov r3.xy, vThreadID.xyxx
mov r3.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.w, r3.xyww, t3.yzwx, l(0)
mad r2.w, r1.w, cb2[15].z, cb2[15].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
ne r1.w, r1.w, l(0.000000)
max r5.y, r2.w, l(0.000000)
min r5.x, r2.w, l(340282346638528860000000000000000000000.000000)
movc r5.xy, r1.wwww, r5.xyxx, l(340282346638528860000000000000000000000.000000,0,0,0)
mov r5.zw, r5.xxxy
mov r1.w, l(1)
loop 
  uge r2.w, r1.w, l(4)
  breakc_nz r2.w
  ldms_indexable(texture2dms)(float,float,float,float) r2.w, r3.xyzw, t3.yzwx, r1.w
  mad r4.w, r2.w, cb2[15].z, cb2[15].w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  ne r2.w, r2.w, l(0.000000)
  max r6.y, r4.w, r5.w
  min r6.x, r4.w, r5.z
  movc r5.zw, r2.wwww, r6.xxxy, r5.zzzw
  iadd r1.w, r1.w, l(1)
endloop 
atomic_umax g0, l(0), r5.w
atomic_umin g1, l(0), r5.z
sync_g_t
ld_raw r1.w, l(0), g0.xxxx
ld_raw r2.w, l(0), g1.xxxx
add r3.x, r1.w, r2.w
mul r3.y, r3.x, l(0.500000)
mov r5.w, l(1.000000)
mov r3.z, r0.x
loop 
  uge r3.w, r3.z, cb2[23].x
  breakc_nz r3.w
  ld_indexable(buffer)(float,float,float,float) r6.xyzw, r3.zzzz, t0.xyzw
  mov r5.xyz, r6.xyzx
  dp4 r6.x, r5.xyzw, cb2[0].xyzw
  dp4 r6.y, r5.xyzw, cb2[1].xyzw
  dp4 r6.z, r5.xyzw, cb2[2].xyzw
  dp3 r3.w, r2.xyzx, r6.xyzx
  lt r3.w, r3.w, r6.w
  dp3 r4.w, r4.xyzx, r6.xyzx
  lt r4.w, r4.w, r6.w
  and r3.w, r3.w, r4.w
  dp3 r4.w, r0.yzwy, r6.xyzx
  lt r4.w, r4.w, r6.w
  and r3.w, r3.w, r4.w
  dp3 r4.w, r1.xyzx, r6.xyzx
  lt r4.w, r4.w, r6.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    add r3.w, r2.w, -r6.z
    lt r3.w, r3.w, r6.w
    mad r4.w, -r3.x, l(0.500000), r6.z
    lt r4.w, r4.w, r6.w
    and r3.w, r3.w, r4.w
    if_nz r3.w
      imm_atomic_iadd r7.x, g2, l(0), l(1)
      store_structured g4.x, r7.x, l(0), r3.z
    endif 
    mad r3.w, r3.x, l(0.500000), -r6.z
    lt r3.w, r3.w, r6.w
    add r4.w, -r1.w, r6.z
    lt r4.w, r4.w, r6.w
    and r3.w, r3.w, r4.w
    if_nz r3.w
      imm_atomic_iadd r6.x, g3, l(0), l(1)
      store_structured g4.x, r6.x, l(0), r3.z
    endif 
  endif 
  iadd r3.z, r3.z, l(1024)
endloop 
mov r5.w, l(1.000000)
mov r3.z, r0.x
loop 
  uge r3.w, r3.z, cb2[23].y
  breakc_nz r3.w
  ld_indexable(buffer)(float,float,float,float) r6.xyzw, r3.zzzz, t1.xyzw
  mov r5.xyz, r6.xyzx
  dp4 r6.x, r5.xyzw, cb2[0].xyzw
  dp4 r6.y, r5.xyzw, cb2[1].xyzw
  dp4 r6.z, r5.xyzw, cb2[2].xyzw
  dp3 r3.w, r2.xyzx, r6.xyzx
  lt r3.w, r3.w, r6.w
  dp3 r4.w, r4.xyzx, r6.xyzx
  lt r4.w, r4.w, r6.w
  and r3.w, r3.w, r4.w
  dp3 r4.w, r0.yzwy, r6.xyzx
  lt r4.w, r4.w, r6.w
  and r3.w, r3.w, r4.w
  dp3 r4.w, r1.xyzx, r6.xyzx
  lt r4.w, r4.w, r6.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    add r3.w, r2.w, -r6.z
    lt r3.w, r3.w, r6.w
    mad r4.w, -r3.x, l(0.500000), r6.z
    lt r4.w, r4.w, r6.w
    and r3.w, r3.w, r4.w
    if_nz r3.w
      imm_atomic_iadd r7.x, g5, l(0), l(1)
      store_structured g7.x, r7.x, l(0), r3.z
    endif 
    mad r3.w, r3.x, l(0.500000), -r6.z
    lt r3.w, r3.w, r6.w
    add r4.w, -r1.w, r6.z
    lt r4.w, r4.w, r6.w
    and r3.w, r3.w, r4.w
    if_nz r3.w
      imm_atomic_iadd r6.x, g6, l(0), l(1)
      store_structured g7.x, r6.x, l(0), r3.z
    endif 
  endif 
  iadd r3.z, r3.z, l(1024)
endloop 
umin r3.z, cb4[0].x, cb2[25].x
mov r5.w, l(1.000000)
mov r3.w, r0.x
loop 
  uge r4.w, r3.w, r3.z
  breakc_nz r4.w
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r6.xyzw, r3.w, l(0), t2.xyzw
  mov r5.xyz, r6.xyzx
  dp4 r6.x, r5.xyzw, cb2[0].xyzw
  dp4 r6.y, r5.xyzw, cb2[1].xyzw
  dp4 r6.z, r5.xyzw, cb2[2].xyzw
  dp3 r4.w, r2.xyzx, r6.xyzx
  lt r4.w, r4.w, r6.w
  dp3 r5.x, r4.xyzx, r6.xyzx
  lt r5.x, r5.x, r6.w
  and r4.w, r4.w, r5.x
  dp3 r5.x, r0.yzwy, r6.xyzx
  lt r5.x, r5.x, r6.w
  and r4.w, r4.w, r5.x
  dp3 r5.x, r1.xyzx, r6.xyzx
  lt r5.x, r5.x, r6.w
  and r4.w, r4.w, r5.x
  if_nz r4.w
    add r4.w, r2.w, -r6.z
    lt r4.w, r4.w, r6.w
    mad r5.x, -r3.x, l(0.500000), r6.z
    lt r5.x, r5.x, r6.w
    and r4.w, r4.w, r5.x
    if_nz r4.w
      imm_atomic_iadd r7.x, g8, l(0), l(1)
      store_structured g10.x, r7.x, l(0), r3.w
    endif 
    mad r4.w, r3.x, l(0.500000), -r6.z
    lt r4.w, r4.w, r6.w
    add r5.x, -r1.w, r6.z
    lt r5.x, r5.x, r6.w
    and r4.w, r4.w, r5.x
    if_nz r4.w
      imm_atomic_iadd r6.x, g9, l(0), l(1)
      store_structured g10.x, r6.x, l(0), r3.w
    endif 
  endif 
  iadd r3.w, r3.w, l(1024)
endloop 
imad r0.y, vThreadGroupID.y, cb2[24].z, vThreadGroupID.x
imul null, r0.z, cb2[24].y, r0.y
ld_raw r0.w, l(0), g2.xxxx
mov r1.x, r0.x
loop 
  uge r1.y, r1.x, r0.w
  breakc_nz r1.y
  imad r1.y, cb2[24].y, r0.y, r1.x
  iadd r1.y, r1.y, l(4)
  ld_structured r1.z, r1.x, l(0), g4.xxxx
  store_uav_typed u0.xyzw, r1.yyyy, r1.zzzz
  iadd r1.x, r1.x, l(1024)
endloop 
ld_raw r0.w, l(0), g3.xxxx
iadd r1.x, r0.w, l(-272)
mov r1.y, r0.x
loop 
  uge r1.w, r1.y, r1.x
  breakc_nz r1.w
  imad r1.w, cb2[24].y, r0.y, r1.y
  iadd r1.w, r1.w, cb2[24].x
  iadd r1.w, r1.w, l(4)
  iadd r1.yz, r1.yyyy, l(0, 1024, 272, 0)
  ld_structured r1.z, r1.z, l(0), g4.xxxx
  store_uav_typed u0.xyzw, r1.wwww, r1.zzzz
endloop 
if_z r0.x
  ushr r0.w, r3.y, l(16)
  and r1.x, r3.y, l(0x0000ffff)
  store_uav_typed u0.xyzw, r0.zzzz, r0.wwww
  imad r1.yzw, cb2[24].yyyy, r0.yyyy, l(0, 1, 2, 3)
  store_uav_typed u0.xyzw, r1.yyyy, r1.xxxx
  ld_raw r0.w, l(0), g2.xxxx
  store_uav_typed u0.xyzw, r1.zzzz, r0.wwww
  ld_raw r0.w, l(0), g3.xxxx
  iadd r0.w, r0.w, l(-272)
  store_uav_typed u0.xyzw, r1.wwww, r0.wwww
endif 
ld_raw r0.w, l(0), g5.xxxx
mov r1.x, r0.x
loop 
  uge r1.y, r1.x, r0.w
  breakc_nz r1.y
  imad r1.y, cb2[24].y, r0.y, r1.x
  iadd r1.y, r1.y, l(4)
  ld_structured r1.z, r1.x, l(0), g7.xxxx
  store_uav_typed u1.xyzw, r1.yyyy, r1.zzzz
  iadd r1.x, r1.x, l(1024)
endloop 
ld_raw r0.w, l(0), g6.xxxx
iadd r1.x, r0.w, l(-272)
mov r1.y, r0.x
loop 
  uge r1.w, r1.y, r1.x
  breakc_nz r1.w
  imad r1.w, cb2[24].y, r0.y, r1.y
  iadd r1.w, r1.w, cb2[24].x
  iadd r1.w, r1.w, l(4)
  iadd r1.yz, r1.yyyy, l(0, 1024, 272, 0)
  ld_structured r1.z, r1.z, l(0), g7.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r1.zzzz
endloop 
if_z r0.x
  ushr r0.w, r3.y, l(16)
  and r1.x, r3.y, l(0x0000ffff)
  store_uav_typed u1.xyzw, r0.zzzz, r0.wwww
  imad r1.yzw, cb2[24].yyyy, r0.yyyy, l(0, 1, 2, 3)
  store_uav_typed u1.xyzw, r1.yyyy, r1.xxxx
  ld_raw r0.w, l(0), g5.xxxx
  store_uav_typed u1.xyzw, r1.zzzz, r0.wwww
  ld_raw r0.w, l(0), g6.xxxx
  iadd r0.w, r0.w, l(-272)
  store_uav_typed u1.xyzw, r1.wwww, r0.wwww
endif 
imul null, r0.z, cb2[25].z, r0.y
ld_raw r0.w, l(0), g8.xxxx
mov r1.x, r0.x
loop 
  uge r1.y, r1.x, r0.w
  breakc_nz r1.y
  imad r1.y, cb2[25].z, r0.y, r1.x
  iadd r1.y, r1.y, l(4)
  ld_structured r1.z, r1.x, l(0), g10.xxxx
  store_uav_typed u2.xyzw, r1.yyyy, r1.zzzz
  iadd r1.x, r1.x, l(1024)
endloop 
ld_raw r0.w, l(0), g9.xxxx
iadd r1.x, r0.w, l(-1024)
mov r1.y, r0.x
loop 
  uge r1.z, r1.y, r1.x
  breakc_nz r1.z
  imad r1.z, cb2[25].z, r0.y, r1.y
  iadd r1.z, r1.z, cb2[25].y
  iadd r1.z, r1.z, l(4)
  iadd r1.y, r1.y, l(1024)
  ld_structured r1.w, r1.y, l(0), g10.xxxx
  store_uav_typed u2.xyzw, r1.zzzz, r1.wwww
endloop 
if_z r0.x
  ushr r0.x, r3.y, l(16)
  and r0.w, r3.y, l(0x0000ffff)
  store_uav_typed u2.xyzw, r0.zzzz, r0.xxxx
  imad r1.xyz, cb2[25].zzzz, r0.yyyy, l(1, 2, 3, 0)
  store_uav_typed u2.xyzw, r1.xxxx, r0.wwww
  ld_raw r0.x, l(0), g8.xxxx
  store_uav_typed u2.xyzw, r1.yyyy, r0.xxxx
  ld_raw r0.x, l(0), g9.xxxx
  iadd r0.x, r0.x, l(-1024)
  store_uav_typed u2.xyzw, r1.zzzz, r0.xxxx
endif 
ret 
// Approximately 346 instruction slots used
