//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mView;                  // Offset:    0 Size:    64 [unused]
//   float4x4 g_mViewInv;               // Offset:   64 Size:    64 [unused]
//   float4x4 g_mProjection;            // Offset:  128 Size:    64 [unused]
//   float4x4 g_mProjectionInv;         // Offset:  192 Size:    64 [unused]
//   float4x4 g_mProjectionInvViewport; // Offset:  256 Size:    64 [unused]
//   float4 g_f4AmbientColorUp;         // Offset:  320 Size:    16 [unused]
//   float4 g_f4AmbientColorDown;       // Offset:  336 Size:    16 [unused]
//   float3 g_f3CameraPos;              // Offset:  352 Size:    12 [unused]
//   float g_fAlphaTest;                // Offset:  364 Size:     4 [unused]
//   uint g_uNumLights;                 // Offset:  368 Size:     4 [unused]
//   uint g_uNumSpotLights;             // Offset:  372 Size:     4 [unused]
//   uint g_uWindowWidth;               // Offset:  376 Size:     4 [unused]
//   uint g_uWindowHeight;              // Offset:  380 Size:     4 [unused]
//   uint g_uMaxNumLightsPerTile;       // Offset:  384 Size:     4 [unused]
//   uint g_uMaxNumElementsPerTile;     // Offset:  388 Size:     4 [unused]
//   uint g_uNumTilesX;                 // Offset:  392 Size:     4 [unused]
//   uint g_uNumTilesY;                 // Offset:  396 Size:     4 [unused]
//   uint g_uMaxVPLs;                   // Offset:  400 Size:     4 [unused]
//   uint g_uMaxNumVPLsPerTile;         // Offset:  404 Size:     4 [unused]
//   uint g_uMaxNumVPLElementsPerTile;  // Offset:  408 Size:     4 [unused]
//   float g_fVPLSpotStrength;          // Offset:  412 Size:     4 [unused]
//   float g_fVPLSpotRadius;            // Offset:  416 Size:     4 [unused]
//   float g_fVPLPointStrength;         // Offset:  420 Size:     4
//   float g_fVPLPointRadius;           // Offset:  424 Size:     4
//   float g_fVPLRemoveBackFaceContrib; // Offset:  428 Size:     4 [unused]
//   float g_fVPLColorThreshold;        // Offset:  432 Size:     4
//   float g_fVPLBrightnessThreshold;   // Offset:  436 Size:     4
//   float g_fPerFramePad1;             // Offset:  440 Size:     4 [unused]
//   float g_fPerFramePad2;             // Offset:  444 Size:     4 [unused]
//
// }
//
// Resource bind info for g_invViewProjMatrices
// {
//
//   float4x4 $Element;                 // Offset:    0 Size:    64
//
// }
//
// Resource bind info for g_vplPositionBuffer
// {
//
//   float4 $Element;                   // Offset:    0 Size:    16
//
// }
//
// Resource bind info for g_VPLData
// {
//
//   struct SVPLData
//   {
//       
//       float4 f4Direction;            // Offset:    0
//       float4 f4Color;                // Offset:   16
//       float4 f4SourceLightDirection; // Offset:   32
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_RSMDepthAtlas                   texture  float4          2d    0        1
// g_RSMNormalAtlas                  texture  float4          2d    1        1
// g_RSMDiffuseAtlas                 texture  float4          2d    2        1
// g_invViewProjMatrices             texture  struct         r/o    3        1
// g_pointLightCenterAndRadiusBuffer    texture  float4         buf    4        1
// g_pointLightColorBuffer           texture  float4         buf    5        1
// g_vplPositionBuffer                   UAV  struct     r/w+cnt    0        1
// g_VPLData                             UAV  struct         r/w    1        1
// cbPerFrame                        cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[28], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_structured t3, 64 
dcl_resource_buffer (float,float,float,float) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_uav_structured_opc u0, 16
dcl_uav_structured u1, 48
dcl_input vThreadID.xy
dcl_temps 8
dcl_thread_group 16, 16, 1
ishl r0.xy, vThreadID.xyxx, l(1, 1, 0, 0)
ubfe r1.xy, l(27, 27, 0, 0), l(4, 4, 0, 0), vThreadID.yxyy
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyww, t2.xyzw
utof r1.zw, r0.xxxy
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.031250, 0.031250)
frc r1.zw, r1.zzzw
ld_indexable(texture2d)(float,float,float,float) r3.z, r0.xyww, t0.yzxw
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 32.000000, 32.000000), l(0.000000, 0.000000, 0.500000, 0.500000)
mad r3.xy, r1.zwzz, l(0.062500, -0.062500, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
imad r1.y, l(6), r1.x, r1.y
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r4.xyzw, r1.y, l(0), t3.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r5.xyzw, r1.y, l(16), t3.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r6.xyzw, r1.y, l(32), t3.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r7.xyzw, r1.y, l(48), t3.xyzw
mov r3.w, l(1.000000)
dp4 r4.x, r3.xyzw, r4.xyzw
dp4 r4.y, r3.xyzw, r5.xyzw
dp4 r4.z, r3.xyzw, r6.xyzw
dp4 r1.y, r3.xyzw, r7.xyzw
div r3.xyz, r4.xyzx, r1.yyyy
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r1.xxxx, t4.xyzw
add r1.yzw, r3.xxyz, -r4.xxyz
dp3 r2.w, r1.yzwy, r1.yzwy
sqrt r4.x, r2.w
div r4.x, r4.x, r4.w
add r4.x, -r4.x, l(1.000000)
mul r2.xyz, r2.xyzx, r4.xxxx
dp3 r4.x, r2.xyzx, r2.xyzx
rsq r4.x, r4.x
mul r4.xyz, r2.xyzx, r4.xxxx
lt r4.xyz, cb2[27].xxxx, r4.xyzx
or r4.x, r4.y, r4.x
or r4.x, r4.z, r4.x
if_nz r4.x
  ld_indexable(buffer)(float,float,float,float) r4.xyz, r1.xxxx, t5.xyzw
  mul r2.xyz, r2.xyzx, r4.xyzx
  mul r4.xyz, r2.xyzx, cb2[26].yyyy
  dp3 r1.x, r4.xyzx, r4.xyzx
  sqrt r1.x, r1.x
  lt r1.x, cb2[27].y, r1.x
  if_nz r1.x
    ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t1.xyzw
    mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    rsq r1.x, r2.w
    mul r1.xyz, r1.xxxx, r1.yzwy
    imm_atomic_alloc r2.x, u0
    mov r3.w, cb2[26].z
    store_structured u0.xyzw, r2.x, l(0), r3.xyzw
    mov r0.w, l(0)
    store_structured u1.xyzw, r2.x, l(0), r0.xyzw
    mov r4.w, l(1.000000)
    store_structured u1.xyzw, r2.x, l(16), r4.xyzw
    mov r1.w, l(0)
    store_structured u1.xyzw, r2.x, l(32), r1.xyzw
  endif 
endif 
ret 
// Approximately 58 instruction slots used
